// Node.js Express Framework Basic Routing

// Basic Routing
// We have seen a basic application which serves HTTP request for the homepage. 
// Routing refers to determining how an application responds to a client request to a
// particular endpoint, which is a URI (or path) and a specific HTTP request method 
// (GET, POST, and so on).
//

// We will extend our “Hello World” program to handle more types of HTTP requests.

var express = require('express');
var app = express();

// This responds with "Hello World" on the homepage
app.get('/', function (req, res) {

   console.log("Got a GET request for the homepage");

   res.send('Hello GET');

})

// This responds a POST request for the homepage
app.post('/', function (req, res) {

   console.log("Got a POST request for the homepage");

   res.send('Hello POST');

})

// This responds a DELETE request for the /del_user page.
app.delete('/del_user', function (req, res) {

   console.log("Got a DELETE request for /del_user");

   res.send('Hello DELETE');

})

// This responds a GET request for the /list_user page.
app.get('/list_user', function (req, res) {

   console.log("Got a GET request for /list_user");

   res.send('Page Listing');

})

// This responds a GET request for abcd, abxcd, ab123cd, and so on
app.get('/ab*cd', function(req, res) {   

   console.log("Got a GET request for /ab*cd");

   res.send('Page Pattern Match');

})

var server = app.listen(8081, function () {

   var host = server.address().address
   var port = server.address().port
   
   console.log("Example app listening at http://%s:%s", host, port)

})

//
// Save the above code in a file named server.js and run it with the following command.
// $ node server.js
//

// You will see the following output:
//
// Example app listening at http://0.0.0.0:8081
// 
// Now you can try different requests at http://127.0.0.1:8081 to see the output
// generated by server.js. 
//
// The following are a few screens shots showing different responses for different URLs.
//
// Screen showing again http://127.0.0.1:8081/list_user
//
// Second Application:
// Screen showing again http://127.0.0.1:8081/abcd
//
// Third Application:
// Screen showing again http://127.0.0.1:8081/abcdefg
//

